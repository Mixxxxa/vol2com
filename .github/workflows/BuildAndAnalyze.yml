name: Build and PVS-Studio analyze

on: [push]

env:
  BUILD_TYPE: Debug
  QT_VERSION: 6.6.1
  

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
        - {
            name: "Windows 2022 x64", 
            artifact: "Windows-x64.zip",
            os: windows-2022,
            analyzer_path: "C:/Program Files (x86)/PVS-Studio",
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
          }
        #- {
        #    name: "Linux Latest x64", artifact: "Linux-x64.zip",
        #    os: ubuntu-latest
        #  }
        #- {
        #    name: "macOS Latest x64", artifact: "macOS-x64.zip",
        #    os: macos-latest
        #  }

    steps:
    - uses: actions/checkout@v3

    - name: Install Qt
      uses: jurplel/install-qt-action@v3.1.0
      with: 
        version: '${{github.workspace}}'
        host: 'windows'
        target: 'desktop'
        arch: 'win64_msvc2019_64'
        modules: 'qtserialport'

    - name: Configure
      run: cmake -S . -B ${{github.workspace}}/build "-GVisual Studio 17 2022" -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} "-DCMAKE_INSTALL_PREFIX=${{github.workspace}}/build/output"

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -j

    - name: Choco install PVS-Studio
      uses: crazy-max/ghaction-chocolatey@v3
      with: 
        args: install pvs-studio

    - name: Analyze
      run: "${{ matrix.config.analyzer_path }}/CompilerCommandsAnalyzer.exe analyze -f build/compile_commands.json -j"

    - name: Convert PVS-Studio report
      run: "${{ matrix.config.analyzer_path }}/HtmlGenerator.exe -t sarif -o pvs-report.sarif PVS-Studio.log"

    - name: Publish report
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: pvs-report.sarif
        category: PVS-Studio
